<?php
/**
 * Created by PhpStorm.
 * User: grace
 * Date: 2017\12\7 0007
 * Time: 11:34
 */

namespace common\service;


use common\models\Category;

class CategoryService extends BaseService
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public static function index($request = [])
    {
        $data = Category::find()->select('*')->asArray()->all();
        $info = [];
        if ($data) {
            foreach ($data as $k1 => $v1) {
                if ($v1['parent_id'] == 0) {
                    $info[$k1] = $v1;
                    $i = 0;
                    foreach ($data as $k2 => $v2) {
                        if ($v1['id'] == $v2['parent_id']) {
                            $info[$k1]['child'][$i] = $v2;
                            $j = 0;
                            foreach ($data as $k3 => $v3) {
                                if ($v2['id'] == $v3['parent_id']) {
                                    $info[$k1]['child'][$i]['child'][$j] = $v3;
                                    $j ++;
                                }
                            }
                            $i ++;
                        }
                    }
                }
            }
        }
        if ($info) {
            foreach ($info as $k => $v) {
                if (!isset($v['child'])) {
                    $info[$k]['child'] = [];
                }
                if (!empty($v['child'])) {
                    foreach ($v['child'] as $kk => $vv) {
                        if (!isset($vv['child'])) {
                            $info[$k]['child'][$kk]['child'] = [];
                        }
                    }
                }
            }
        }

        return $info;
    }

    public static function get_child_id($id)
    {
        $ids = [$id];
        $data1 = Category::find()->select('id')->where(['parent_id'=>$id])->asArray()->all();
        if($data1){
            foreach ($data1 as $k => $v){
                $rs = Category::find()->select('id')->where(['parent_id'=>$v['id']])->asArray()->all();
                $rs && $data1 = array_merge($data1,$rs);
            }
        }
        if($data1){
            foreach ($data1 as $kk => $vv){
                array_push($ids,$vv['id']);
            }
        }
        return $ids;
    }

}